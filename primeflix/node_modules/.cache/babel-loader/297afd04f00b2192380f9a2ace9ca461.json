{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEV_2ano_2024\\\\Documents\\\\Livia\\\\Github\\\\Primeflix\\\\primeflix\\\\src\\\\pages\\\\Home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Loading } from '../../components';\nimport imageNotFound from '../../assets/images/placeholder.png';\nimport placeholderImage from '../../assets/glyphicons/picture-grey.svg';\nimport loadingImage from '../../assets/images/loading.svg';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport 'react-circular-progressbar/dist/styles.css';\nimport styles from './styles.module.css';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  // Define o componente funcional Home.\n  const [movies, setMovies] = useState([]); // Define o estado 'movies' para armazenar a lista de filmes.\n\n  const [loading, setLoading] = useState(true); // Define o estado 'loading' para indicar se a página está carregando.\n\n  const [loadingSearch, setLoadingSearch] = useState(false); // Define o estado 'loadingSearch' para indicar se a busca está carregando.\n\n  const [search, setSearch] = useState(''); // Define o estado 'search' para armazenar o termo de busca do usuário.\n\n  const [currentPage, setCurrentPage] = useState(1); // Define o estado 'currentPage' para armazenar o número da página atual.\n\n  const [counts, setCounts] = useState({\n    // Define o estado 'counts' para armazenar informações sobre o total de páginas e resultados.\n    total_pages: 500,\n    total_results: 10000\n  });\n\n  const formatDate = value => {\n    // Função para formatar a data de lançamento do filme.\n    if (value === null) return 'Não Disponível';\n    let options = {\n      timeZone: 'America/Sao_Paulo',\n      hour12: true,\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric'\n    };\n    const date = new Date(value);\n    return date.toLocaleDateString('pt-br', options);\n  };\n\n  const handleSubmit = e => {\n    // Função para lidar com o envio do formulário de pesquisa.\n    e.preventDefault();\n    setSearch(search); // Atualiza o termo de busca.\n\n    setCurrentPage(1); // Reseta a página atual para a primeira página.\n  };\n\n  const handleChange = e => {\n    // Função para lidar com a alteração do campo de busca.\n    setSearch(e.target.value); // Atualiza o termo de busca.\n\n    setCurrentPage(1); // Reseta a página atual para a primeira página.\n  };\n\n  const loadMoreItems = useRef(0); // Define uma referência para controlar o número de vezes que o usuário carrega mais itens.\n\n  useEffect(() => {\n    // Efeito para carregar os filmes quando o componente é montado ou quando o termo de busca ou a página atual são alterados.\n    async function loadMovies() {\n      // Função assíncrona para carregar os filmes.\n      const params = {\n        // Parâmetros da requisição à API.\n        params: {\n          page: currentPage\n        }\n      };\n\n      if (search !== '') {\n        // Se houver um termo de busca, adiciona o parâmetro de busca aos parâmetros da requisição.\n        params.params.query = search;\n      }\n\n      const url = search === '' ? 'movie/now_playing' : 'search/movie'; // Define a URL da API com base no termo de busca.\n\n      const response = await api.get(url, params); // Faz a requisição à API.\n\n      const {\n        results,\n        total_pages,\n        total_results\n      } = response.data; // Extrai os resultados da resposta da API.\n\n      setMovies(previous => // Atualiza a lista de filmes no estado, adicionando novos filmes se a página atual for maior que 1.\n      currentPage === 1 ? results : [...previous, ...results]);\n      setCounts({\n        // Atualiza as informações sobre o total de páginas e resultados.\n        total_pages: total_pages,\n        total_results: total_results\n      });\n      setLoadingSearch(false); // Indica que a busca não está mais carregando.\n\n      setLoading(false); // Indica que a página não está mais carregando.\n\n      loadMoreItems.current = 0; // Reseta o número de vezes que o usuário carrega mais itens.\n    }\n\n    loadMovies(); // Chama a função para carregar os filmes.\n  }, [search, currentPage]); // O efeito é reexecutado sempre que o termo de busca ou a página atual são alterados.\n\n  const handleLoadMore = () => {\n    // Função para carregar mais filmes quando o usuário clica no botão 'Carregar mais filmes'.\n    if (loadMoreItems.current < 2) {\n      // Permitir apenas duas vezes o carregamento adicional\n      setCurrentPage(page => page + 1); // Atualiza a página atual.\n\n      setLoadingSearch(true); // Indica que a busca está carregando.\n\n      loadMoreItems.current++; // Incrementa o contador de carregamento adicional.\n    }\n  };\n\n  if (loading) {\n    // Se a página estiver carregando, exibe o componente de carregamento.\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      text: \"Carregando filmes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.grid_title,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Bem-Vindo(a).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Milh\\xF5es de Filmes, S\\xE9ries e Pessoas para Descobrir. Explore j\\xE1.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            name: \"search\",\n            id: \"search\",\n            placeholder: \"Pesquise pelo seu filme favorito...\",\n            onChange: handleChange,\n            value: search || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSearch,\n              size: \"xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.list_movies,\n      children: [// Mapeia os filmes e exibe cada um\n      movies.map(movie => /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.id}`,\n          children: movie.poster_path !== null ? /*#__PURE__*/_jsxDEV(LazyLoadImage, {\n            src: `https://image.tmdb.org/t/p/w300/${movie.poster_path}`,\n            effect: \"blur\",\n            alt: movie.title,\n            title: movie.title,\n            placeholderSrc: placeholderImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this) :\n          /*#__PURE__*/\n          // Exibe uma imagem padrão caso a imagem do filme não esteja disponível\n          _jsxDEV(\"img\", {\n            src: imageNotFound,\n            alt: movie.title,\n            title: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.progressbar,\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: movie.vote_average * 10,\n            text: `${movie.vote_average}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [movie.title.substring(0, 18), \" \", movie.title.length > 18 && '...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formatDate(movie.release_date || null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)), // Exibe uma mensagem de carregamento durante a busca \n      loadingSearch && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.search_movies,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: loadingImage,\n          alt: \"Carregando filmes...\",\n          width: 25,\n          height: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Carregando filmes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.load_more,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        children: \"Carregar mais filmes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), movies.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.search_movies,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.search_h2,\n        children: \"Nenhum filme foi encontrado, tente novamente...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"Ly5zht6YCVlIxEZaERQb9LNoMi4=\");\n\n_c = Home;\nexport default _c2 = /*#__PURE__*/memo(Home);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useEffect","useState","useRef","Link","FontAwesomeIcon","faSearch","CircularProgressbar","LazyLoadImage","Loading","imageNotFound","placeholderImage","loadingImage","styles","api","Home","movies","setMovies","loading","setLoading","loadingSearch","setLoadingSearch","search","setSearch","currentPage","setCurrentPage","counts","setCounts","total_pages","total_results","formatDate","value","options","timeZone","hour12","day","month","year","date","Date","toLocaleDateString","handleSubmit","e","preventDefault","handleChange","target","loadMoreItems","loadMovies","params","page","query","url","response","get","results","data","previous","current","handleLoadMore","container","title","grid_title","list_movies","map","movie","id","poster_path","progressbar","vote_average","substring","length","release_date","search_movies","load_more","search_h2"],"sources":["C:/Users/DEV_2ano_2024/Documents/Livia/Github/Primeflix/primeflix/src/pages/Home/index.js"],"sourcesContent":["import { memo, useEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Loading } from '../../components';\n\nimport imageNotFound from '../../assets/images/placeholder.png';\nimport placeholderImage from '../../assets/glyphicons/picture-grey.svg';\nimport loadingImage from '../../assets/images/loading.svg';\n\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport styles from './styles.module.css';\nimport api from '../../services/api';\n\nfunction Home() { // Define o componente funcional Home.\n  const [movies, setMovies] = useState([]); // Define o estado 'movies' para armazenar a lista de filmes.\n  const [loading, setLoading] = useState(true); // Define o estado 'loading' para indicar se a página está carregando.\n  const [loadingSearch, setLoadingSearch] = useState(false); // Define o estado 'loadingSearch' para indicar se a busca está carregando.\n  const [search, setSearch] = useState(''); // Define o estado 'search' para armazenar o termo de busca do usuário.\n  const [currentPage, setCurrentPage] = useState(1); // Define o estado 'currentPage' para armazenar o número da página atual.\n  const [counts, setCounts] = useState({ // Define o estado 'counts' para armazenar informações sobre o total de páginas e resultados.\n    total_pages: 500,\n    total_results: 10000\n  });\n\n  const formatDate = (value) => { // Função para formatar a data de lançamento do filme.\n    if (value === null) return 'Não Disponível';\n\n    let options = {\n      timeZone: 'America/Sao_Paulo',\n      hour12: true,\n      day: 'numeric',\n      month: 'short',\n      year: 'numeric'\n    };\n\n    const date = new Date(value);\n    return date.toLocaleDateString('pt-br', options);\n  }\n  \n  const handleSubmit = (e) => { // Função para lidar com o envio do formulário de pesquisa.\n    e.preventDefault();\n    \n    setSearch(search); // Atualiza o termo de busca.\n    setCurrentPage(1); // Reseta a página atual para a primeira página.\n  }\n\n  const handleChange = (e) => { // Função para lidar com a alteração do campo de busca.\n    setSearch(e.target.value); // Atualiza o termo de busca.\n    setCurrentPage(1); // Reseta a página atual para a primeira página.\n  }\n\n  const loadMoreItems = useRef(0); // Define uma referência para controlar o número de vezes que o usuário carrega mais itens.\n\n  useEffect(() => { // Efeito para carregar os filmes quando o componente é montado ou quando o termo de busca ou a página atual são alterados.\n    async function loadMovies() { // Função assíncrona para carregar os filmes.\n      const params = { // Parâmetros da requisição à API.\n        params: { \n          page: currentPage \n        }\n      };\n\n      if (search !== '') { // Se houver um termo de busca, adiciona o parâmetro de busca aos parâmetros da requisição.\n        params.params.query = search;\n      }\n\n      const url = (search === '') ? 'movie/now_playing' : 'search/movie'; // Define a URL da API com base no termo de busca.\n\n      const response = await api.get(url, params); // Faz a requisição à API.\n\n      const { results, total_pages, total_results } = response.data; // Extrai os resultados da resposta da API.\n\n      setMovies((previous) => // Atualiza a lista de filmes no estado, adicionando novos filmes se a página atual for maior que 1.\n        currentPage === 1 ? results : [...previous, ...results]\n      );\n\n      setCounts({ // Atualiza as informações sobre o total de páginas e resultados.\n        total_pages: total_pages,\n        total_results: total_results\n      });\n\n      setLoadingSearch(false); // Indica que a busca não está mais carregando.\n      setLoading(false); // Indica que a página não está mais carregando.\n      loadMoreItems.current = 0; // Reseta o número de vezes que o usuário carrega mais itens.\n    }\n\n    loadMovies(); // Chama a função para carregar os filmes.\n  }, [search, currentPage]); // O efeito é reexecutado sempre que o termo de busca ou a página atual são alterados.\n\n  const handleLoadMore = () => { // Função para carregar mais filmes quando o usuário clica no botão 'Carregar mais filmes'.\n    if (loadMoreItems.current < 2) { // Permitir apenas duas vezes o carregamento adicional\n      setCurrentPage((page) => page + 1); // Atualiza a página atual.\n      setLoadingSearch(true); // Indica que a busca está carregando.\n      loadMoreItems.current++; // Incrementa o contador de carregamento adicional.\n    }\n  }\n\n  if (loading) { // Se a página estiver carregando, exibe o componente de carregamento.\n    return (\n      <Loading text='Carregando filmes...' />\n    );\n  }\n\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>\n        {/* Área de título */}\n        <div className={styles.grid_title}>\n          <h1>Bem-Vindo(a).</h1>\n          <p>Milhões de Filmes, Séries e Pessoas para Descobrir. Explore já.</p>\n          <form onSubmit={handleSubmit}>\n          {/* Campo de entrada para pesquisa  */}\n            <input\n              type='search'\n              name='search'\n              id='search'\n              placeholder='Pesquise pelo seu filme favorito...'\n              onChange={handleChange}\n              value={search || ''}\n            />\n            {/* Botão de pesquisa */}\n            <button type='submit'>\n            {/* Ícone de pesquisa  */}\n              <FontAwesomeIcon icon={faSearch} size='xl' />\n            </button>\n          </form>\n        </div>\n      </div>\n      <div className={styles.list_movies}>\n        {\n          // Mapeia os filmes e exibe cada um\n          movies.map((movie) => (\n            <article key={movie.id}>\n              {/* Link para a página do filme */}\n              <Link to={`/movie/${movie.id}`}>\n                {\n                  movie.poster_path !== null ? (\n                    <LazyLoadImage\n                      src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                      effect='blur'\n                      alt={movie.title}\n                      title={movie.title}\n                      placeholderSrc={placeholderImage}\n                    />\n                  ) : (\n                    // Exibe uma imagem padrão caso a imagem do filme não esteja disponível\n                    <img\n                      src={imageNotFound}\n                      alt={movie.title}\n                      title={movie.title}\n                    />\n                  )\n                }\n              </Link>\n              {/* Exibe a barra de progresso com a avaliação do filme */}\n              <div className={styles.progressbar}>\n                <CircularProgressbar\n                  value={movie.vote_average * 10}\n                  text={`${movie.vote_average}%`}\n                />\n              </div>\n              <Link to={`/movie/${movie.id}`}>\n              {/* Exibe o título do filme com limite de caracteres */}\n                <strong>\n                  {movie.title.substring(0, 18)} {movie.title.length > 18 && '...'}\n                </strong>\n              </Link>\n              {/* Exibe a data de lançamento do filme formatada  */}\n              <p>{formatDate(movie.release_date || null)}</p>\n            </article>\n          ))\n        }\n\n        {\n          // Exibe uma mensagem de carregamento durante a busca \n          loadingSearch && (\n            <div className={styles.search_movies}>\n              <img src={loadingImage} alt='Carregando filmes...' width={25} height={25}/>\n              <h3>Carregando filmes...</h3>\n            </div>\n          )\n        }\n      </div>\n\n      {/* Botão para carregar mais filmes se a lista não estiver vazia */}\n      {movies.length > 0 && (\n        <div className={styles.load_more}>\n          <button onClick={handleLoadMore}>Carregar mais filmes</button>\n        </div>\n      )}\n\n      {/* Exibe uma mensagem se a lista de filmes estiver vazia */}\n      {\n        movies.length === 0 && (\n          <div className={styles.search_movies}>\n            <h2 className={styles.search_h2}>\n              Nenhum filme foi encontrado, tente novamente...\n            </h2>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default memo(Home);"],"mappings":"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"},"metadata":{},"sourceType":"module"}